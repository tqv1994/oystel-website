// change to false if its not imported into bootstrap
$use-bootstrap: false;
// margin and padding values array
$space-values : (
        0, 5, 8, 10, 15, 20, 25, 30, 35, 40, 45, 48, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100, 115, 120, 125, 150, 160, 200
) !default;

// margin and padding shorthands
$space-prefixes : (
        p  : padding,
        pt : padding-top,
        pr : padding-right,
        pb : padding-bottom,
        pl : padding-left,
        m  : margin,
        mt : margin-top,
        mr : margin-right,
        mb : margin-bottom,
        ml : margin-left,
) !default;

// change these values if its not imported into bootstrap
$grid-breakpoints-custom: (
  // Extra small screen / phone
        m: 0,
  // Small screen / phone
        tm: 600px,
  // Medium screen / tablet
        t: 905px,
  // Large screen / desktop
        d: 1240px,
  // Extra large screen / wide desktop
        dl: 1440px
) !default;

$breakpoints : $grid-breakpoints-custom;
@if $use-bootstrap {
  $breakpoints : $grid-breakpoints;
}




// main function definition
@mixin make-space($values, $prefixes, $breakpoints) {
  @each $breakpoint-name, $breakpoint-value in $breakpoints {
    // if xs value = 0, set it global without media queries
    @if($breakpoint-value == 0) {
      @media screen and (max-width: 599px) {
        @each $attr-short, $attr-long in $prefixes {
          @each $value in $values {
            .#{$breakpoint-name}-#{$attr-short}-#{$value} {
              #{$attr-long}: #{$value}px !important;
            }
          }
        }
      }
      @each $attr-short, $attr-long in $prefixes {
        @each $value in $values {
          #{$attr-short}-#{$value} {
            #{$attr-long}: #{$value}px !important;
          }
        }
      }
    }
      // breakpoint values that not equal to 0
    @else {
      @media screen and (min-width: $breakpoint-value) {
        @each $attr-short, $attr-long in $prefixes {
          @each $value in $values {
            .#{$breakpoint-name}-#{$attr-short}-#{$value} {
              #{$attr-long}: #{$value}px !important;
            }
          }
        }
      }
    }
  }
}

@include make-space($space-values, $space-prefixes, $breakpoints);